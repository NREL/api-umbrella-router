[program:<%= deploy_name %>-gatekeeper]
directory=<%=current_path %>/gatekeeper
environment=PATH=/opt/nodejs/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin,NODE_ENV=<%= rails_env %>,NODE_CONFIG_DIR=<%= current_path %>/config,NODE_LOG_DIR=<%= current_path %>/log/gatekeeper
command=<%= current_path %>/gatekeeper/bin/api_umbrella_gatekeeper

; Always keep running.
autostart=true
autorestart=true

; It can take longer for the the proxy to fully startup, so set a longer
; startup time.
startsecs=5

; Graceful shutdown, remaining open `stopwaitsecs` seconds for open connections
; to disconnect.
stopsignal=QUIT

; Eventually we have to kill off any open connections so we can restart, but
; we'll give them quite a while.
stopwaitsecs=90

; Run as the web user.
user=www-data-local

; Log both stdout and stderr to the same log file. One log file per
; Gatekeeper instance running on each port.
redirect_stderr=true
stdout_logfile=<%= current_path %>/log/gatekeeper/supervisor.log

; Don't rotate based on file size. We'll rotate externally using logrotate.
logfile_maxbytes=0

; Define a group so everything in this deployment can be controlled together.
[group:<%= deploy_name %>]
programs=<%= deploy_name %>-gatekeeper
